params {    
    //////////////////////////
    // ESSENTIAL PARAMETERS //
    //////////////////////////

    // Pipeline mode. Choose from 'monomer_denovo', 'monomer_foldcond', 'monomer_motifscaff', 'monomer_partialdiff',
    // 'binder_denovo', 'binder_foldcond', 'binder_motifscaff', 'binder_partialdiff', 'bindcraft'
    design_mode          = null
    
    // Number of designs to generate using RFdiffusion or Bindcraft
    num_designs   = 8
    
    // Number of sequences to generate per design
    seqs_per_design   = 8

    // Output directory for results. Existing results in this directory will be overwritten. 
    // To generate a unique directory name with date/time use a Groovy function e.g "pdj_results/${new Date().format('yyyyMMdd_HHmmss')}"
    out_dir           = "pdj_results"

    //////////////////////////////
    // MODE SPECIFIC PARAMETERS //
    //////////////////////////////
    
    // Path to input pdb e.g. target protein for binder design 'target.pdb'
    // Required for 'bindcraft', 'binder_denovo', 'binder_foldcond', 'binder_motifscaff', 'binder_partialdiff', 'monomer_motifscaff', 'monomer_partialdiff' modes
    input_pdb          = null
    
    // Hotspot residues on target chain(s) for binder design. Comma-separated list with chain ID and residue number e.g. 'A56,A115,A123'
    // If set to null, an appropriate site will be selected by the pipeline.
    // Optional for 'bindcraft', 'binder_denovo' and 'binder_foldcond' modes
    hotspot_residues = null

    // Input PDB chains to target. Can be one or multiple, in a comma-separated format e.g. 'A,C'. Other chains will be ignored during design.
    // Required for 'bindcraft' mode
    bc_chains = null
    
    // Design length. Two comma separated values for min,max design length e.g. '60,70' or '60'. Pipeline will randomly sample different sizes between these values.
    // Required for 'bindcraft' mode
    bc_design_length = null

    // Contigs specification. See examples in documentation. e.g. '[A17-145/0 50-100]'
    // Required for 'binder_denovo', 'binder_motifscaff', 'binder_partialdiff', 'monomer_denovo', 'monomer_motifscaff', 'monomer_partialdiff' modes
    rfd_contigs            = null

    // Path to directory containing fold conditioning secondary structure (*_ss.pt) and block adjacency files (*_adj.pt) files e.g. 'binderscaffolds/scaffolds_assorted'
    // Required for 'binder_foldcond' and 'monomer_foldcond' modes.
    rfd_scaffold_dir = null
    
    // Paths to fold conditioning secondary structure and block adjacency files for the target protein. e.g. 'target_ss.pt', 'target_adj.pt'
    // Required for 'binder_foldcond' mode.
    rfd_target_ss    = null
    rfd_target_adj   = null

    // Whether to ignore loop regions when applying secondary structure constraints from scaffolds (default=true)
    // Optional for 'binder_foldcond' and 'monomer_foldcond' modes.
    // Recommended to set to false for binder design as the scaffold sets have enough diversity
    rfd_mask_loops = true

    // Residues that will have their sequence masked when diffusing (default=null). e.g. '[A17-19/A143-145]'
    // Optional for 'monomer_motifscaff' and 'monomer_foldcond' modes
    rfd_inpaint_seq = null
    
    // Total length of diffused chain when performing motif scaffolding (default = null). e.g. '100-100', '100-120'
    // Optional for 'binder_motifscaff' and 'monomer_motifscaff' modes
    rfd_length = null
    
    // Number of timesteps for partial diffusion. e.g. 20
    // Required by 'binder_partialdiff' and 'monomer_partialdiff' modes
    rfd_partial_diffusion_timesteps = null    
    
    //////////////////////////////////
    // WORKFLOW ADVANCED PARAMETERS //
    //////////////////////////////////
    // Sequence design method. Choose from 'mpnn' (ProteinMPNN Fast-Relax) or 'fampnn' (Full-Atom MPNN).
    seq_method = 'mpnn'

    // Structure prediction method. Choose from 'af2' (AlphaFold2 Initial-Guess) or 'boltz' (Boltz-2).
    pred_method = 'af2'

    // Whether to compress output final designs in a tar.gz archive. If false, results will be output as uncompressed PDB files.
    zip_pdbs = true

    // Whether to run RFdiffusion only and skip downstream stages (i.e. sequence design, prediction, and analysis)
    run_rfd_only = false

    // Whether to skip stages (RFdiffusion, sequence design, and/or prediction).
    // Skip RFdiffusion and run Sequence Design, Structure Prediction, and Analysis only. Must provide 'skip_input_dir' directory below containing PDB and JSON files with metadata. Binder design PDBs must have binder as chain A and target as chain B.
    skip_rfd = false

    // Skip RFdiffusion and Sequence Design, and run Structure Prediction and Analysis only. Must provide 'skip_input_dir' directory below containing PDB files. Binder design PDBs must have binder as chain A and target as chain B.
    skip_rfd_seq = false

    // Skip RFdiffusion, Sequence Design, and Structure Prediction, and run Analysis only. Must provide 'skip_input_dir' directory below containing PDB files. Binder design PDBs must have binder as chain A and target as chain B.
    skip_rfd_seq_pred = false

    // Path to input files when skipping stages e.g. './lib/rfd_previous_results'
    skip_input_dir = null

    //////////////////////////
    // BINDCRAFT PARAMETERS //
    //////////////////////////

    ///////////////////////////////////
    // BINDCRAFT ADVANCED PARAMETERS //
    ///////////////////////////////////
    // Which binder design protocol to run? "default" is recommended. "betasheet" promotes the design of more beta sheeted proteins, but requires more sampling. "peptide" is optimised for helical peptide binders.
    bc_design_protocol = "default"
    // What target template protocol to use? "default" allows for limited amount of flexibility. "flexible" allows for greater target flexibility on both sidechain and backbone level.
    bc_template_protocol = "default"
    // Residue types to avoid during sequence design (comma separated list, one letter case-insensitive) (default: 'C') e.g. 'C,H'.
    // These residue types can still occur if no other options are possible in the position.
    bc_omit_AAs = 'C'
    // Whether to preserve/fix the interface residues of the binder designed by BindCraft during the subsequent sequence design stage (Recommended to leave as true).
    bc_fix_interface_residues = true
    // Path to a custom advanced settings json file. Not recommended unless you know what you are doing.
    // Some parameters will be ignored as they apply to BindCraft routines downstream of fold design that are not implemented here e.g. MPNN parameters
    bc_advanced_json = null

    /////////////////////////////
    // RFD ADVANCED PARAMETERS //
    /////////////////////////////

    // Override the diffusion model checkpoint used by RFdiffusion.
    // Choose from: 'active_site', 'base', 'base_epoch8', 'complex_base', 'complex_beta', 'complex_fold_base', 'inpaint_seq', 'inpaint_seq_fold'
    // RFdiffusion will automatically select a checkpoint. Not recommended to override except for 'binder_denovo' mode i.e. 'complex_beta'
    rfd_ckpt_override   = null

    // Scale of noise for RFD translations (ca) and rotations (frame)
    // 1 (default) is recommended for monomer modes to increase diversity
    // 0 is recommended for binder modes to increase success rates
    rfd_noise_scale       = null

    // Additional configuration parameters to pass to RFdiffusion that are not externalised in Nextflow. e.g. 'contigmap.inpaint_str=[B165-178]'
    rfd_extra_config       = null
    
    //////////////////////////////
    // MPNN ADVANCED PARAMETERS //
    //////////////////////////////
    // Parameters for ProteinMPNN-FastRelax. Binder design modes only.

    // Residue types to avoid during sequence design (one letter case-insensitive) (default: 'CX').
    mpnn_omitAAs                      = 'CX'
    
    // Temperature for sequence sampling. Higher values increase sequence diversity. Default=0.1
    // For binder design, it is recommended to decrease this significantly e.g. 0.0001 
    mpnn_temperature                  = 0.1

    // Checkpoint type to use for ProteinMPNN. Choose from 'vanilla' or 'soluble' (default = soluble).
    mpnn_checkpoint_type = 'soluble'

    // Checkpoint model to use for ProteinMPNN. Indicates noise level used during training for backbone atoms.
    // Choose from 'v_48_002','v_48_010,'v_48_020','v_48_030'. (default = 'v_48_020', noised with 0.20Å Gaussian noise)
    mpnn_checkpoint_model = 'v_48_020'
    
    // Standard deviation of Gaussian noise to add to backbone atoms.
    // 0 = no change to backbone, 0.1-0.3 = allows mild pertubation of backbone
    mpnn_backbone_noise               = 0
    
    // Maximum number of fast relax cycles to run on each sequence. Set to zero to disable.
    mpnn_relax_max_cycles             = 0
    
    // Number of sequences to generate between relaxation steps. The sequence with the best score will be kept.
    mpnn_relax_seqs_per_cycle         = 1
    
    // Whether to run a relaxation cycle before saving output.
    mpnn_relax_output                 = false
    
    // Convergence criteria 1 of 2. 
    // Design is considered converged if the C-alpha RMSD (Å) between cycles is <= this threshold (default: 0.2)
    mpnn_relax_convergence_rmsd       = 0.2
    
    // Convergence criteria 2 of 2. 
    // Design is considered converged if the improvement in score between cycles is <= this threshold (default: 0.1)
    mpnn_relax_convergence_score      = 0.1
    
    // Design is considered converged if it meets both convergence criteria for n consecutive cycles (default: 1)
    mpnn_relax_convergence_max_cycles = 1

    // Additional configuration parameters to pass to ProteinMPNN-FastRelax that are not externalised in Nextflow. e.g. '-protein_features='full''
    mpnn_extra_config       = null

    ////////////////////////////////
    // FAMPNN ADVANCED PARAMETERS //
    ////////////////////////////////
    // Parameters for Full-Atom MPNN

    // Fix target side-chain positions when performing binder sequence design (default: false)
    fampnn_fix_target_sidechains = false

    // Only keep sidechains below this PSCE threshold during design; null to keep all (default: 0.3)
    fampnn_psce_threshold = 0.3
    
    // Temperature for sequence sampling. Higher values increase sequence diversity (default: 0.1)
    // For binder design, it is recommended to decrease this significantly e.g. 0.0001 
    fampnn_temperature    = 0.1
    
    // Exclude cysteine residues from sequence design (default: true)
    fampnn_exclude_cys    = true

    // Additional configuration parameters to pass to Full-Atom MPNN that are not externalised in Nextflow. e.g. 'timestep_schedule.num_steps=100 seq_only=true'
    fampnn_extra_config       = null

    //////////////////////////////
    // PRED ADVANCED PARAMETERS //
    //////////////////////////////
    // Parameters for structure prediction using AlphaFold2 Initial-Guess and Boltz-2.

    // Path to uncropped target PDB file to use in structure prediction e.g. './benchmarkdata/5o45_pd-l1_uncropped.pdb'.
    uncropped_target_pdb = null

    // Use an initial-guess of the target chain(s) when performing binder structure prediction. When false, AF2 will not use an initial guess. Default = true
    af2_initial_guess = true

    // Additional configuration parameters to pass to AlphaFold2 Initial-Guess that are not externalised in Nextflow. e.g. '-recycle 3'
    af2_extra_config   = null
    
    // The number of recycling steps to use for prediction with Boltz-2. (default: 3)
    boltz_recycling_steps = 3
    
    // The number of diffusion samples to use for prediction with Boltz-2. (default: 1)
    boltz_diffusion_samples = 1
    
    // The number of sampling steps to use for prediction with Boltz-2. (default: 200)
    boltz_sampling_steps = 200

    // Use physics-based potentials during inference to improve physical plausibility of predictions (also known as Boltz-2x). Increases prediction time.
    boltz_use_potentials = false

    // Additional configuration parameters to pass to Boltz-2 that are not externalised in Nextflow. e.g. '--msa_pairing_strategy complete'
    boltz_extra_config   = null

    //////////////////////////
    // FILTERING PARAMETERS //
    //////////////////////////

    // RFdiffusion Filtering Parameters. Applies to binder chain only in binder design modes, otherwise all chains.
    // Max/min number of alpha-helices in design
    rfd_min_helices = null
    rfd_max_helices = null
    
    // Max/min number of beta-strands in design
    rfd_min_strands = null
    rfd_max_strands = null
    
    // Max/min number of secondary structure elements (α-helices + β-strands)
    rfd_min_ss = null
    rfd_max_ss = null
    
    // Max/min radius of gyration (Å) of design
    rfd_min_rog = null
    rfd_max_rog = null

    // ProteinMPNN Filtering Parameters
    // Maximum ProteinMPNN score (negative log likelihood).
    // A lower score means ProteinMPNN is more confident in the sequence.
    mpnn_max_score = null

    // Full-Atom MPNN Filtering Parameters
    // Max average predicted side-chain error (PSCE) for designed side-chains.
    // Applies to binder chain only in binder design modes, otherwise averages all chains.
    // A lower score means FAMPNN is more confident in the sequence.
    fampnn_max_psce = null

    // AlphaFold2 Initial-Guess Filtering Parameters.
    // Max predicted aligned error for interactions between binder and target
    af2_max_pae_interaction = null

    // Max predicted aligned error for all chains
    af2_max_pae_overall = null

    // Max predicted aligned error for binder
    af2_max_pae_binder      = null

    // Max predicted aligned error for target
    af2_max_pae_target      = null

    // Min average pLDDT score for target and binder chains
    af2_min_plddt_overall     = null

    // Min pLDDT score required for binder
    af2_min_plddt_binder    = null

    // Min pLDDT score required for target
    af2_min_plddt_target    = null
    
    // Max C-alpha RMSD between AF2 prediction and input design when all chains are aligned
    af2_max_rmsd_overall     = null

    // Max binder C-alpha RMSD between AF2 prediction and input design when binder chains are aligned
    af2_max_rmsd_binder_bndaln     = null

    // Max binder C-alpha RMSD between AF2 prediction and input design when target chains are aligned
    af2_max_rmsd_binder_tgtaln     = null

    // Max target C-alpha RMSD between AF2 prediction and input design when target chains are aligned
    af2_max_rmsd_target     = null

    // Boltz-2 Filtering Parameters.

    // Max C-alpha RMSD between all chains of Boltz-2 prediction and input design.
    boltz_max_overall_rmsd = null

    // Max C-alpha RMSD between binder chains of Boltz-2 prediction and input design. Binder modes only. 
    boltz_max_binder_rmsd = null

    // Max C-alpha RMSD between target chains of Boltz-2 prediction and input design. Binder modes only. 
    boltz_max_target_rmsd = null

    // Minimum confidence score
    boltz_min_conf_score = null

    // Minimum predicted TM-score
    boltz_min_ptm              = null

    // Minimum predicted TM-score of interface
    boltz_min_ptm_interface             = null

    // Minimum pLDDT score of the complex
    boltz_min_plddt    = null

    // Minimum pLDDT score of the complex interface
    boltz_min_plddt_interface   = null

    // Maximum predicted distance error for the complex
    boltz_max_pde      = null

    // Maximum predicted distance error for the complex interface
    boltz_max_pde_interface     = null

    ///////////////////////////
    // CLUSTER CONFIGURATION //
    ///////////////////////////
    
    // Path to the pipeline containers directory or cloud URL to fetch from
    container_dir    = 'https://object-store.rc.nectar.org.au/v1/AUTH_b6f9bdf15faf4320a7587fd42f62e530/ContainerHub'
    
    // Path to the RFdiffusion model checkpoints
    rfd_models       = "${projectDir}/models/rfd"
    
    // Path to the AlphaFold2 models
    af2_models    = "${projectDir}/models/af2"

    // Path to the Boltz-2 models
    boltz_models   = "${projectDir}/models/boltz"
    
    // GPU model requested (e.g. 'A30')
    gpu_model        = 'A30'

    // GPU queue name or partition (if applicable, e.g. 'gpuq')
    gpu_queue = null
    
    // Number of GPUs to request
    gpus         = 4
    
    // Number of CPUs to request per GPU
    cpus_per_gpu = 8

    // Number of CPUs to request for CPU-only jobs
    cpus           = 24
    
    // Memory requested for GPU jobs
    memory_gpu     = '24GB'
    
    // Memory requested for CPU-only jobs
    memory_cpu     = '24GB'

    ////////////////////////////////
    // INTERNAL SYSTEM PARAMETERS //
    ////////////////////////////////
    // WARNING: These parameters are used internally by the pipeline system.
    // Users should NOT modify these parameters as they will interfere with functionality
    bindsweeper_param_combo = null

}
profiles {
test { // base configuration for testing
        params {
            num_designs = 4
            seqs_per_design = 2
        }
    }
    monomer_denovo {
        params {
            design_mode = 'monomer_denovo'
            rfd_contigs = '[80-80]'
            seq_method = 'fampnn'
            pred_method = 'boltz'
        }
    }
    monomer_foldcond {
        params {
            design_mode = 'monomer_foldcond'
            rfd_scaffold_dir = './binderscaffolds/scaffolds_assorted'
            seq_method = 'fampnn'
        }
    }
    monomer_motifscaff {
        params {
            design_mode = 'monomer_motifscaff'
            input_pdb = './benchmarkdata/5o45_pd-l1.pdb'
            rfd_contigs = '[A17-43/9-15/A53-117/3-6/A121-131]'
            rfd_inpaint_seq = '[A17-19/A129-131]'
        }
    }
    monomer_partialdiff {
        params {
            design_mode = 'monomer_partialdiff'
            input_pdb = './benchmarkdata/5o45_pd-l1.pdb'
            rfd_contigs = '[A17-111/20]'
            rfd_partial_diffusion_timesteps = 20
            mpnn_relax_max_cycles = 1
            pred_method = 'boltz'
        }
    }
    bindcraft {
        params {
            design_mode = 'bindcraft'
            input_pdb = './benchmarkdata/5o45_pd-l1.pdb'
            bc_chains = 'A'
            hotspot_residues = 'A56'
            bc_design_length = '60,60'
            af2_max_pae_interaction = 7
            af2_min_plddt_overall = 90
            af2_max_rmsd_binder_bndaln = 1.5
        }
    }
    binder_denovo {
        params {
            design_mode = 'binder_denovo'
            input_pdb = './benchmarkdata/5o45_pd-l1.pdb'
            rfd_contigs = '[A17-131/0 60-100]'
            hotspot_residues = 'A56,A115,A123'
        }
    }
    binder_foldcond {
        params {
            design_mode = 'binder_foldcond'
            input_pdb = './benchmarkdata/5o45_pd-l1.pdb'
            hotspot_residues = 'A56,A115,A123'
            rfd_scaffold_dir = './binderscaffolds/scaffolds_assorted'
            rfd_target_ss = './benchmarkdata/5o45_pd-l1_ss.pt'
            rfd_target_adj = './benchmarkdata/5o45_pd-l1_adj.pt'
            rfd_mask_loops = false
        }
    }
    binder_motifscaff {
        params {
            design_mode = 'binder_motifscaff'
            input_pdb = "./lib/examplebinder.pdb"
            rfd_contigs = "[5-10/A1-88/10-20/0 B89-203]"
            rfd_ckpt_override = 'complex_base'
            rfd_length = '110-110'
        }
    }
    binder_partialdiff {
        params {
            design_mode = 'binder_partialdiff'
            input_pdb = "./lib/examplebinder.pdb"
            rfd_contigs = "[88-88/0 B89-203]"
            rfd_partial_diffusion_timesteps = 20
        }
    }
    apptainer {
        conda.enabled          = false
        apptainer.enabled      = true
        apptainer.autoMount    = true
        singularity.enabled    = false
        docker.enabled         = false
        params.container_dir   = "https://object-store.rc.nectar.org.au/v1/AUTH_b6f9bdf15faf4320a7587fd42f62e530/ContainerHub"
    }
    singularity {
        conda.enabled          = false
        apptainer.enabled      = false
        apptainer.autoMount    = false
        singularity.enabled    = true
        singularity.autoMount  = true
        docker.enabled         = false
        params.container_dir   = "https://object-store.rc.nectar.org.au/v1/AUTH_b6f9bdf15faf4320a7587fd42f62e530/ContainerHub"
    }
    // Profile for WEHI HPC environment
    milton {
        conda.enabled          = false
        apptainer.enabled      = true
        apptainer.autoMount    = true
        singularity.enabled    = false
        docker.enabled         = false
        params.rfd_models       = '/vast/projects/alphafold/databases/predictedDb/RFDiffusion/models'
        params.af2_models    = '/vast/projects/alphafold/databases/params_2022-12-06'
        params.boltz_models   = '/vast/projects/alphafold/databases/predictedDb/containers/proteinDJ/boltzmodels'
        params.container_dir    = '/vast/projects/alphafold/databases/predictedDb/containers/proteinDJ/18_08'
        params.gpu_queue = 'gpuq'
    }
    debug { 
            cleanup = false
    }
}
process {
        // default is to use resource request for cpu-only jobs
        cpus             = "${params.cpus}"
        memory           = "${params.memory_cpu}" 
        withLabel: 'gpu'{
            clusterOptions    = '--gres=gpu:' + "${params.gpu_model}" + ':1'
            cpus              = "${params.cpus_per_gpu}"
            memory            = "${params.memory_gpu}"
            if (params.gpu_queue) {
                queue         = "${params.gpu_queue}"
            }
        }
        withLabel: 'AF2' {
            container         = "${params.container_dir}/af2.sif"
            containerOptions  = """ --nv \
            --bind ${params.af2_models}:/dl_binder_design/af2_initial_guess/model_weights/params \
            --bind ${projectDir}/scripts:/scripts \
            --bind ${projectDir} """
        }
        withLabel: 'BC' {
            container         = "${params.container_dir}/bindcraft.sif"
            containerOptions  = """--nv \
            --bind ${params.af2_models}:/af2params \
            """
        }        
        withLabel: 'Boltz' {
            container         = "${params.container_dir}/boltz2.sif"       
            containerOptions  = """--nv \
            --bind ${params.boltz_models}:/boltzcache \
            --bind ${projectDir}/scripts:/scripts \
            --bind ${projectDir} \
            """
        }
        withLabel: 'FAMPNN' {
            container         = "${params.container_dir}/fampnn.sif"
            containerOptions  = """--nv \
            --bind ${projectDir}/scripts:/scripts \
            --bind ${projectDir} \
            """
        }
        withLabel: 'MPNN' {
            container        = "${params.container_dir}/dl_binder_design.sif"
            containerOptions = """--bind ${projectDir}/scripts:/scripts \
                    --bind ${projectDir} """
        }
        withLabel: 'RFDiffusion' {
            container         = "${params.container_dir}/rfdiffusion.sif"
            containerOptions = """--nv \
            --bind ${params.rfd_models}:/app/RFdiffusion/models \
            --bind ./schedules:/app/RFdiffusion/schedules \
            --bind ./.dgl:\$HOME/.dgl \
            --bind ${projectDir}/scripts:/scripts \
            --bind ${projectDir} \
            """
        }
        withLabel: 'pyrosetta_tools' { 
            container = "${params.container_dir}/pyrosetta_tools.sif"
            containerOptions = "--bind ${projectDir} --bind ${projectDir}/scripts:/scripts"
        }
}
